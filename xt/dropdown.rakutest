use v6.d;
#use Test;

use GnomeTools::Gtk::DropDown;
use GnomeTools::Gtk::Dialog;

use Gnome::Gtk4::Label:api<2>;

use Gnome::N::N-Object:api<2>;

#-------------------------------------------------------------------------------
class HelperObject {
  method show-select (
    GnomeTools::Gtk::DropDown :$dropdown, GnomeTools::Gtk::Dialog :$dialog
) {
    my Str $selection = $dropdown.get-text;
    $dialog.set-status("'$selection' selected");
  }

  method change-dd (
    N-Object $,
    GnomeTools::Gtk::DropDown :$dropdown1,
    GnomeTools::Gtk::DropDown :$dropdown2,
    GnomeTools::Gtk::Dialog :$dialog
  ) {
    my Str $selection = $dropdown2.get-text;
    $dialog.set-status("'$selection' selected");
    $dropdown1.select($selection);
  }
}

my HelperObject $helper .= new;

#-------------------------------------------------------------------------------
my GnomeTools::Gtk::Dialog $dialog .= new(
  :dialog-header('Test Dialog'), :add-statusbar
);

my GnomeTools::Gtk::DropDown $dropdown1 .= new;
$dropdown1.set-selection( <abc def ghi en nogiuyuiyuy wat dusiuyuiyuy>, :select-item<ghi>);
$dialog.add-content( 'Select something 1', $dropdown1);

my GnomeTools::Gtk::DropDown $dropdown2 .= new;
$dropdown2.set-selection( <abc def ghi en nogiuyuiyuy wat dusiuyuiyuy>, :select-item<ghi>);
$dialog.add-content( 'Select something 2', $dropdown2);

$dropdown2.trap-dropdown-changes(
  $helper, 'change-dd', :$dropdown1, :$dropdown2, :$dialog
);

# Buttons
$dialog.add-button(
  $helper, 'show-select', 'Get Selection 1', :$dialog, :dropdown($dropdown1)
);

$dialog.add-button(
  $helper, 'show-select', 'Get Selection 2', :$dialog, :dropdown($dropdown2)
);

$dialog.add-button( $dialog, 'destroy-dialog', 'Cancel');


$dialog.show-dialog;

